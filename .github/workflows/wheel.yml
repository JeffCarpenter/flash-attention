name: Build Flash Attention Wheels with CUDA

on: workflow_dispatch

jobs:
  build_wheels:
    if: ${{ github.repository_owner == 'PanQiWei' }}
    name: Build wheels for ${{ matrix.os }} and Python ${{ matrix.python }} and CUDA ${{ matrix.cuda }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-20.04"]
        pyver: ["3.10"]
        cuda: ["11.8"]
    env:
        CUDA_VERSION: ${{ matrix.cuda }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.pyver }}

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          activate-environment: "build"
          python-version: ${{ matrix.pyver }}
          mamba-version: "*"
          use-mamba: true
          channels: conda-forge,defaults
          channel-priority: true
          add-pip-as-python-dependency: true
          auto-activate-base: false

      - name: Install Dependencies
        run: |
          mamba install cuda-toolkit -c "nvidia/label/cuda-${env:CUDA_VERSION}.0"
          mamba install pytorch "pytorch-cuda=${env:CUDA_VERSION}" -c pytorch -c nvidia
          python -m pip install --upgrade build setuptools wheel ninja

      - name: Build Wheel
        run: |
          $env:CUDA_PATH = $env:CONDA_PREFIX
          $env:CUDA_HOME = $env:CONDA_PREFIX
          if ($IsLinux) {$env:LD_LIBRARY_PATH = $env:CONDA_PREFIX + '/lib:' + $env:LD_LIBRARY_PATH}

          # TODO: remove this
          if (!$IsLinux) {$env:INCLUDE_EXLLAMA_KERNELS = 0}

          $env:TORCH_CUDA_ARCH_LIST = '6.0 7.5'
          python setup.py bdist_wheel

      - uses: actions/upload-artifact@v3
        if: runner.os == 'Linux'
        with:
          # name: 'linux-cuda-wheels'
          path: ./dist/*.whl
